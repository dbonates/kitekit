// Generated by Apple Swift version 4.2.1 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import AVFoundation;
@import CoreFoundation;
@import CoreGraphics;
@import CoreImage;
@import CoreMedia;
@import Foundation;
@import JavaScriptCore;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="KiteKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class UnarchivingInfo;

@interface AVPlayerLayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end

@class ActionResponseType;
enum ResponseTriggerDecision : NSInteger;

@interface AVPlayerLayer (SWIFT_EXTENSION(KiteKit))
- (enum ResponseTriggerDecision)canTriggerWithResponseType:(ActionResponseType * _Nonnull)responseType SWIFT_WARN_UNUSED_RESULT;
@end

@class CALayer;
@class CopyingInfo;

@interface AVPlayerLayer (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end

@class PresentationContext;

@interface AVPlayerLayer (SWIFT_EXTENSION(KiteKit))
- (void)prepareForPresentationExitInContext:(PresentationContext * _Nonnull)context;
@end




SWIFT_PROTOCOL("_TtP7KiteKit24MediaTimingScriptExports_")
@protocol MediaTimingScriptExports <JSExport>
@property (nonatomic) CFTimeInterval beginTime;
@property (nonatomic) CFTimeInterval duration;
@property (nonatomic) float speed;
@property (nonatomic) CFTimeInterval timeOffset;
@property (nonatomic) float repeatCount;
@property (nonatomic) CFTimeInterval repeatDuration;
@property (nonatomic) BOOL autoreverses;
@property (nonatomic, copy) NSString * _Nonnull scriptFillMode;
@end

@class JRObservationController;
@class JSValue;
@class JRObservationInfo;
@class MetadataDictionary;
@class CAAnimation;
@class UIColor;
@class UIBezierPath;
@protocol CAAction;
@class Action;
@protocol CALayerDelegate;

SWIFT_PROTOCOL("_TtP7KiteKit18LayerScriptExports_")
@protocol LayerScriptExports <MediaTimingScriptExports>
+ (CALayer * _Nonnull)layer:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
- (CALayer * _Nullable)presentationLayer SWIFT_WARN_UNUSED_RESULT;
- (CALayer * _Nonnull)modelLayer SWIFT_WARN_UNUSED_RESULT;
+ (id _Nullable)defaultValueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)needsDisplayForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldArchiveValueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)valueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(id _Nullable)value forKey:(NSString * _Nonnull)key;
- (id _Nullable)valueForKeyPath:(NSString * _Nonnull)keyPath SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(id _Nullable)value forKeyPath:(NSString * _Nonnull)keyPath;
@property (nonatomic, readonly, strong) JRObservationController * _Nonnull observationController;
- (JRObservationInfo * _Nullable)observe:(NSString * _Nonnull)keyPath :(JSValue * _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) MetadataDictionary * _Nonnull data;
@property (nonatomic) BOOL allowsImplicitAnimations;
@property (nonatomic, readonly, copy) NSArray<CAAnimation *> * _Nullable animations;
- (NSArray<CALayer *> * _Nonnull)getLayersByName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (CALayer * _Nullable)getLayerByName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) JSValue * _Nullable drawLayerInContext;
@property (nonatomic, strong) JSValue * _Nullable mouseDown;
@property (nonatomic, strong) JSValue * _Nullable mouseUp;
@property (nonatomic, strong) JSValue * _Nullable mouseMoved;
@property (nonatomic, strong) JSValue * _Nullable mouseEntered;
@property (nonatomic, strong) JSValue * _Nullable mouseExited;
@property (nonatomic, strong) JSValue * _Nullable mouseDragged;
@property (nonatomic, strong) JSValue * _Nullable scrollWheel;
@property (nonatomic, strong) JSValue * _Nullable keyDown;
@property (nonatomic, strong) JSValue * _Nullable keyUp;
@property (nonatomic, strong) JSValue * _Nullable magnifyGesture;
@property (nonatomic, strong) JSValue * _Nullable rotateGesture;
@property (nonatomic, strong) JSValue * _Nullable swipeGesture;
@property (nonatomic, strong) JSValue * _Nullable canvasReady;
@property (nonatomic, strong) JSValue * _Nullable pressureChanged;
@property (nonatomic, strong) id _Nonnull layerBounds;
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
@property (nonatomic, strong) id _Nonnull layerPosition;
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@property (nonatomic) CGFloat z;
@property (nonatomic) CGFloat zPosition;
@property (nonatomic, strong) id _Nonnull layerAnchorPoint;
@property (nonatomic) CGFloat anchorPointZ;
@property (nonatomic) CATransform3D transform;
@property (nonatomic) CGFloat rotation;
@property (nonatomic) CGFloat rotationX;
@property (nonatomic) CGFloat rotationY;
@property (nonatomic) CGFloat rotationZ;
@property (nonatomic) CGFloat layerScale;
@property (nonatomic) CGFloat scaleX;
@property (nonatomic) CGFloat scaleY;
@property (nonatomic) CGFloat scaleZ;
@property (nonatomic) CGSize translation;
@property (nonatomic) CGFloat translationX;
@property (nonatomic) CGFloat translationY;
@property (nonatomic) CGFloat translationZ;
- (CGAffineTransform)affineTransform SWIFT_WARN_UNUSED_RESULT;
- (void)setAffineTransform:(CGAffineTransform)m;
@property (nonatomic, strong) id _Nonnull layerFrame;
@property (nonatomic) BOOL layerHidden;
@property (nonatomic) BOOL layerDoubleSided;
@property (nonatomic) BOOL layerGeometryFlipped;
- (BOOL)contentsAreFlipped SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) CALayer * _Nullable superlayer;
- (void)removeFromSuperlayer;
@property (nonatomic, copy) NSArray<CALayer *> * _Nullable sublayers;
- (void)addSublayer:(CALayer * _Nonnull)layer;
- (void)insertSublayer:(CALayer * _Nonnull)layer atIndex:(uint32_t)idx;
- (void)insertSublayer:(CALayer * _Nonnull)layer below:(CALayer * _Nullable)sibling;
- (void)insertSublayer:(CALayer * _Nonnull)layer above:(CALayer * _Nullable)sibling;
- (void)replaceSublayer:(CALayer * _Nonnull)layer with:(CALayer * _Nonnull)layer2;
@property (nonatomic) CATransform3D sublayerTransform;
@property (nonatomic) CGFloat sublayerRotation;
@property (nonatomic) CGFloat sublayerRotationX;
@property (nonatomic) CGFloat sublayerRotationY;
@property (nonatomic) CGFloat sublayerRotationZ;
@property (nonatomic) CGFloat sublayerScale;
@property (nonatomic) CGFloat sublayerScaleX;
@property (nonatomic) CGFloat sublayerScaleY;
@property (nonatomic) CGFloat sublayerScaleZ;
@property (nonatomic) CGSize sublayerTranslation;
@property (nonatomic) CGFloat sublayerTranslationX;
@property (nonatomic) CGFloat sublayerTranslationY;
@property (nonatomic) CGFloat sublayerTranslationZ;
@property (nonatomic, strong) CALayer * _Nullable mask;
@property (nonatomic) BOOL masksToBounds;
/// Mapping between layer coordinate and time spaces. *
- (CGPoint)convertPoint:(CGPoint)p fromLayer:(CALayer * _Nullable)l SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)convertPoint:(CGPoint)p toLayer:(CALayer * _Nullable)l SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)r fromLayer:(CALayer * _Nullable)l SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)r toLayer:(CALayer * _Nullable)l SWIFT_WARN_UNUSED_RESULT;
- (CFTimeInterval)convertTime:(CFTimeInterval)t fromLayer:(CALayer * _Nullable)l SWIFT_WARN_UNUSED_RESULT;
- (CFTimeInterval)convertTime:(CFTimeInterval)t toLayer:(CALayer * _Nullable)l SWIFT_WARN_UNUSED_RESULT;
/// Hit testing methods. *
- (CALayer * _Nullable)hitTest:(CGPoint)p SWIFT_WARN_UNUSED_RESULT;
- (BOOL)containsPoint:(CGPoint)p SWIFT_WARN_UNUSED_RESULT;
/// Layer content properties and methods. *
@property (nonatomic) id _Nullable contents;
@property (nonatomic, strong) id _Nonnull layerContentsRect;
@property (nonatomic, copy) NSString * _Nonnull scriptContentsGravity;
@property (nonatomic) CGFloat contentsScale;
@property (nonatomic, strong) id _Nonnull layerContentsCenter;
@property (nonatomic, copy) NSString * _Nonnull scriptMinificationFilter;
@property (nonatomic, copy) NSString * _Nonnull scriptMagnificationFilter;
@property (nonatomic) float minificationFilterBias;
@property (nonatomic) BOOL layerOpaque;
- (void)display;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(CGRect)r;
- (BOOL)needsDisplay SWIFT_WARN_UNUSED_RESULT;
- (void)displayIfNeeded;
@property (nonatomic) BOOL needsDisplayOnBoundsChange;
@property (nonatomic) BOOL drawsAsynchronously;
- (void)drawInContext:(CGContextRef _Nonnull)ctx;
/// Rendering properties and methods. *
- (void)renderInContext:(CGContextRef _Nonnull)ctx;
@property (nonatomic) CAEdgeAntialiasingMask edgeAntialiasingMask;
@property (nonatomic) BOOL allowsEdgeAntialiasing;
@property (nonatomic, strong) UIColor * _Nullable layerBackgroundColor;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CACornerMask layerMaskedCorners;
@property (nonatomic) CGFloat borderWidth;
@property (nonatomic, strong) UIColor * _Nullable layerBorderColor;
@property (nonatomic) float opacity;
@property (nonatomic) BOOL allowsGroupOpacity;
@property (nonatomic) id _Nullable compositingFilter;
@property (nonatomic, copy) NSArray * _Nullable filters;
@property (nonatomic, copy) NSArray * _Nullable backgroundFilters;
@property (nonatomic) BOOL shouldRasterize;
@property (nonatomic) CGFloat rasterizationScale;
/// Shadow properties. *
@property (nonatomic, strong) UIColor * _Nullable layerShadowColor;
@property (nonatomic) float shadowOpacity;
@property (nonatomic, strong) id _Nonnull layerShadowOffset;
@property (nonatomic) CGFloat shadowRadius;
@property (nonatomic, strong) UIBezierPath * _Nullable layerShadowPath;
- (CGSize)preferredFrameSize SWIFT_WARN_UNUSED_RESULT;
- (void)setNeedsLayout;
- (BOOL)needsLayout SWIFT_WARN_UNUSED_RESULT;
- (void)layoutIfNeeded;
- (void)layoutSublayers;
/// Action methods. *
+ (id <CAAction> _Nullable)defaultActionForKey:(NSString * _Nonnull)event SWIFT_WARN_UNUSED_RESULT;
- (id <CAAction> _Nullable)actionForKey:(NSString * _Nonnull)event SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSDictionary<NSString *, id <CAAction>> * _Nullable actions;
@property (nonatomic, readonly, copy) NSArray<Action *> * _Nonnull interactions;
/// Animation methods. *
- (void)addAnimation:(CAAnimation * _Nonnull)animation forKey:(NSString * _Nullable)key;
- (void)addScriptAnimation:(CAAnimation * _Nonnull)anim;
- (void)removeAllAnimations;
- (void)removeAnimationForKey:(NSString * _Nonnull)key;
- (NSArray<NSString *> * _Nullable)animationKeys SWIFT_WARN_UNUSED_RESULT;
- (CAAnimation * _Nullable)animationForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Miscellaneous properties. *
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, weak) id <CALayerDelegate> _Nullable delegate;
@property (nonatomic, copy) NSDictionary * _Nullable style;
- (void)scrollPoint:(CGPoint)p;
- (void)scrollRectToVisible:(CGRect)r;
@property (nonatomic, readonly) CGRect visibleRect;
@end

@class AVPlayer;

SWIFT_PROTOCOL("_TtP7KiteKit24PlayerLayerScriptExports_")
@protocol PlayerLayerScriptExports <LayerScriptExports>
+ (AVPlayerLayer * _Nonnull)playerLayerWithPlayer:(AVPlayer * _Nullable)player :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos,introduced=10.7);
@property (nonatomic, strong) AVPlayer * _Nullable player SWIFT_AVAILABILITY(macos,introduced=10.7);
@property (nonatomic) AVLayerVideoGravity _Nonnull videoGravity;
@property (nonatomic, readonly) BOOL layerReadyForDisplay;
@property (nonatomic, readonly) CGRect videoRect;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable pixelBufferAttributes;
- (void)seekToTime:(CFTimeInterval)time;
@end


@interface AVPlayerLayer (SWIFT_EXTENSION(KiteKit)) <PlayerLayerScriptExports>
+ (AVPlayerLayer * _Nonnull)playerLayerWithPlayer:(AVPlayer * _Nullable)player :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
- (void)seekToTime:(CFTimeInterval)time;
@property (nonatomic, readonly) BOOL layerReadyForDisplay;
@end

@class ActionEvent;
@class ActionResponse;

SWIFT_CLASS("_TtC7KiteKit6Action")
@interface Action : NSObject
@property (nonatomic, weak) CALayer * _Nullable owner;
@property (nonatomic) BOOL hidden;
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) ActionEvent * _Nonnull actionEvent;
@property (nonatomic, copy) NSArray<ActionResponse *> * _Nonnull actionResponses;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) NSUInteger hash;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end








@interface Action (SWIFT_EXTENSION(KiteKit))
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_PROTOCOL("_TtP7KiteKit22ActionScriptingExports_")
@protocol ActionScriptingExports <JSExport>
@property (nonatomic, readonly, strong) ActionEvent * _Nonnull actionEvent;
@property (nonatomic, readonly, copy) NSArray<ActionResponse *> * _Nonnull actionResponses;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, strong) CALayer * _Nullable owner;
@property (nonatomic, readonly) BOOL hidden;
@property (nonatomic, readonly) BOOL locked;
- (void)fire;
@end

@class JSContext;

@interface Action (SWIFT_EXTENSION(KiteKit)) <ActionScriptingExports>
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
- (void)fire;
@end


SWIFT_CLASS("_TtC7KiteKit11ActionEvent")
@interface ActionEvent : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end



@class ItemCatalog;

@interface ActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)restoreItemIdentifiersFrom:(ItemCatalog * _Nonnull)catalog;
@end


@interface ActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface ActionEvent (SWIFT_EXTENSION(KiteKit)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS("_TtC7KiteKit15ActionEventType")
@interface ActionEventType : NSObject
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit29ActionEventTypeGestureMagnify")
@interface ActionEventTypeGestureMagnify : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit28ActionEventTypeGestureRotate")
@interface ActionEventTypeGestureRotate : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit27ActionEventTypeGestureSwipe")
@interface ActionEventTypeGestureSwipe : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit22ActionEventTypeKeyDown")
@interface ActionEventTypeKeyDown : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit20ActionEventTypeKeyUp")
@interface ActionEventTypeKeyUp : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit32ActionEventTypeLayerValueChanged")
@interface ActionEventTypeLayerValueChanged : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit27ActionEventTypeMouseClicked")
@interface ActionEventTypeMouseClicked : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit24ActionEventTypeMouseDown")
@interface ActionEventTypeMouseDown : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit24ActionEventTypeMouseDrag")
@interface ActionEventTypeMouseDrag : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit27ActionEventTypeMouseEntered")
@interface ActionEventTypeMouseEntered : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit26ActionEventTypeMouseExited")
@interface ActionEventTypeMouseExited : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit24ActionEventTypeMouseMove")
@interface ActionEventTypeMouseMove : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit22ActionEventTypeMouseUp")
@interface ActionEventTypeMouseUp : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit22ActionEventTypeNoEvent")
@interface ActionEventTypeNoEvent : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit27ActionEventTypeNotification")
@interface ActionEventTypeNotification : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit19ActionEventTypePeek")
@interface ActionEventTypePeek : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit18ActionEventTypePop")
@interface ActionEventTypePop : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit30ActionEventTypePressureChanged")
@interface ActionEventTypePressureChanged : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit21ActionEventTypeScroll")
@interface ActionEventTypeScroll : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit27ActionEventTypeTimeInterval")
@interface ActionEventTypeTimeInterval : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit24ActionEventTypeTimerFire")
@interface ActionEventTypeTimerFire : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit26ActionEventTypeUnspecified")
@interface ActionEventTypeUnspecified : ActionEventType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit14ActionResponse")
@interface ActionResponse : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


SWIFT_CLASS("_TtC7KiteKit31ActionReferencingActionResponse")
@interface ActionReferencingActionResponse : ActionResponse
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface ActionReferencingActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)restoreItemIdentifiersFrom:(ItemCatalog * _Nonnull)itemCatalog;
@end


@interface ActionReferencingActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface ActionReferencingActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end





@interface ActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)restoreItemIdentifiersFrom:(ItemCatalog * _Nonnull)catalog;
@end


@interface ActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface ActionResponse (SWIFT_EXTENSION(KiteKit))
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS("_TtC7KiteKit18ActionResponseType")
@interface ActionResponseType : NSObject
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit28ActionResponseTypeAppendText")
@interface ActionResponseTypeAppendText : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit40ActionResponseTypeCallJavaScriptFunction")
@interface ActionResponseTypeCallJavaScriptFunction : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit32ActionResponseTypeDisableActions")
@interface ActionResponseTypeDisableActions : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit31ActionResponseTypeEnableActions")
@interface ActionResponseTypeEnableActions : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("ActionResponseTypeGenerateHapticFeedback")
@interface ActionResponseTypeGenerateHapticFeedback : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit26ActionResponseTypeGoToTime")
@interface ActionResponseTypeGoToTime : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("ActionResponseTypeMapEventValue")
@interface ActionResponseTypeMapEventValue : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("ActionResponseTypeMapLayerValue")
@interface ActionResponseTypeMapLayerValue : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit31ActionResponseTypeMoveWithMouse")
@interface ActionResponseTypeMoveWithMouse : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit39ActionResponseTypePauseTimelinePlayback")
@interface ActionResponseTypePauseTimelinePlayback : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit28ActionResponseTypePauseVideo")
@interface ActionResponseTypePauseVideo : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit32ActionResponseTypePlayAnimations")
@interface ActionResponseTypePlayAnimations : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit27ActionResponseTypePlaySound")
@interface ActionResponseTypePlaySound : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit27ActionResponseTypePlayVideo")
@interface ActionResponseTypePlayVideo : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit34ActionResponseTypePostNotification")
@interface ActionResponseTypePostNotification : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit40ActionResponseTypeResumeTimelinePlayback")
@interface ActionResponseTypeResumeTimelinePlayback : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit32ActionResponseTypeRewindTimeline")
@interface ActionResponseTypeRewindTimeline : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit29ActionResponseTypeRewindVideo")
@interface ActionResponseTypeRewindVideo : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit31ActionResponseTypeRunJavaScript")
@interface ActionResponseTypeRunJavaScript : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit24ActionResponseTypeScroll")
@interface ActionResponseTypeScroll : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit35ActionResponseTypeToggleiOSKeyboard")
@interface ActionResponseTypeToggleiOSKeyboard : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit35ActionResponseTypeTransitionToLayer")
@interface ActionResponseTypeTransitionToLayer : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit34ActionResponseTypeTransitionToPage")
@interface ActionResponseTypeTransitionToPage : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit32ActionResponseTypeTriggerActions")
@interface ActionResponseTypeTriggerActions : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit29ActionResponseTypeUnspecified")
@interface ActionResponseTypeUnspecified : ActionResponseType
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class CAMediaTimingFunction;
@protocol CAAnimationDelegate;

SWIFT_PROTOCOL("_TtP7KiteKit25AnimationScriptingExports_")
@protocol AnimationScriptingExports <MediaTimingScriptExports>
@property (nonatomic, strong) JSValue * _Nullable onCompletion;
+ (CAAnimation * _Nonnull)animation:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) CAMediaTimingFunction * _Nullable timingFunction;
@property (nonatomic, strong) id <CAAnimationDelegate> _Nullable delegate;
@property (nonatomic) BOOL animationRemovedOnCompletion;
@property (nonatomic, copy) NSString * _Nonnull name;
@end


SWIFT_PROTOCOL("_TtP7KiteKit30AnimationGroupScriptingExports_")
@protocol AnimationGroupScriptingExports <AnimationScriptingExports>
@property (nonatomic, copy) NSArray<CAAnimation *> * _Nullable animations;
@end



SWIFT_PROTOCOL("_TtP7KiteKit24AnimationsContainerOwner_")
@protocol AnimationsContainerOwner
@property (nonatomic, readonly, copy) NSArray<CAAnimation *> * _Nullable animations;
- (NSArray<NSString *> * _Nullable)animationKeys SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<CAAnimation *> * _Nonnull allAnimations;
- (CAAnimation * _Nullable)animationForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)addAnimation:(CAAnimation * _Nonnull)animation forKey:(NSString * _Nullable)key;
- (void)readd:(CAAnimation * _Nonnull)animation forKey:(NSString * _Nullable)key;
- (void)removeAnimationForKey:(NSString * _Nonnull)key;
- (void)add:(CAAnimation * _Nonnull)animation;
- (void)add:(CAAnimation * _Nonnull)animation useCurrentBeginTime:(BOOL)useCurrentBeginTime;
- (void)add:(CAAnimation * _Nonnull)animation atIndex:(NSInteger)index useCurrentBeginTime:(BOOL)useCurrentBeginTime;
- (void)remove:(CAAnimation * _Nonnull)animation;
@end


SWIFT_CLASS_NAMED("AppendTextActionResponse")
@interface AppendTextActionResponse : ActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit17ArchiveDictionary")
@interface ArchiveDictionary : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit9AssetInfo")
@interface AssetInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit12AssetManager")
@interface AssetManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit14AsyncOperation")
@interface AsyncOperation : NSOperation
@property (nonatomic, getter=isExecuting) BOOL executing;
@property (nonatomic, getter=isFinished) BOOL finished;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit24BaseScrollActionResponse")
@interface BaseScrollActionResponse : ActionResponse
- (nonnull instancetype)init;
- (void)restoreOriginalActions:(NSDictionary<NSString *, id <CAAction>> * _Nonnull)originalLayerActions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end

@class CAValueFunction;

SWIFT_PROTOCOL("_TtP7KiteKit33PropertyAnimationScriptingExports_")
@protocol PropertyAnimationScriptingExports <AnimationScriptingExports>
- (nonnull instancetype)animationWithKeyPath:(NSString * _Nullable)path SWIFT_METHOD_FAMILY(init);
@property (nonatomic, copy) NSString * _Nullable keyPath;
@property (nonatomic) BOOL animationAdditive;
@property (nonatomic) BOOL animationCumulative;
@property (nonatomic, strong) CAValueFunction * _Nullable valueFunction;
@end


SWIFT_PROTOCOL("_TtP7KiteKit30BasicAnimationScriptingExports_")
@protocol BasicAnimationScriptingExports <PropertyAnimationScriptingExports>
@property (nonatomic) id _Nullable animationFromValue;
@property (nonatomic) id _Nullable animationToValue;
@property (nonatomic) id _Nullable animationByValue;
@end




@interface CAAnimation (SWIFT_EXTENSION(KiteKit))
- (void)updateLayerWithFinalModelValue:(CALayer * _Nonnull)layer;
@end


@interface CAAnimation (SWIFT_EXTENSION(KiteKit))
- (CAAnimation * _Nonnull)copyWithInfo:(CopyingInfo * _Nonnull)info SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAAnimation (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end




@interface CAAnimation (SWIFT_EXTENSION(KiteKit))
@property (nonatomic, readonly) BOOL modifiesPosition;
@property (nonatomic, readonly) BOOL modifiesBounds;
- (BOOL)modifiesKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAAnimation (SWIFT_EXTENSION(KiteKit))
@property (nonatomic, copy) NSString * _Nullable previousPresentationAnimationKeyID;
- (void)regeneratePresentationAnimationKeyID;
- (void)setupAnimationCompletionHandler:(CALayer * _Nonnull)layer;
@end


@interface CAAnimation (SWIFT_EXTENSION(KiteKit)) <AnimationScriptingExports>
+ (CAAnimation * _Nonnull)animation:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) JSValue * _Nullable onCompletion;
@property (nonatomic) BOOL animationRemovedOnCompletion;
@property (nonatomic, copy) NSString * _Nonnull scriptFillMode;
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAAnimation (SWIFT_EXTENSION(KiteKit))
+ (NSString * _Nonnull)defaultName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nonnull name;
@end


@interface CAAnimationGroup (SWIFT_EXTENSION(KiteKit))
- (CAAnimation * _Nonnull)copyWithInfo:(CopyingInfo * _Nonnull)info SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAAnimationGroup (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface CAAnimationGroup (SWIFT_EXTENSION(KiteKit))
+ (NSString * _Nonnull)defaultName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAAnimationGroup (SWIFT_EXTENSION(KiteKit)) <AnimationGroupScriptingExports>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAAnimationGroup (SWIFT_EXTENSION(KiteKit))
@property (nonatomic, readonly) BOOL modifiesPosition;
@property (nonatomic, readonly) BOOL modifiesBounds;
- (BOOL)modifiesKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAAnimationGroup (SWIFT_EXTENSION(KiteKit)) <AnimationsContainerOwner>
- (NSArray<NSString *> * _Nullable)animationKeys SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<CAAnimation *> * _Nonnull allAnimations;
- (CAAnimation * _Nullable)animationForKey:(NSString * _Nonnull)animationKey SWIFT_WARN_UNUSED_RESULT;
- (void)addAnimation:(CAAnimation * _Nonnull)animation forKey:(NSString * _Nullable)key;
- (void)readd:(CAAnimation * _Nonnull)animation forKey:(NSString * _Nullable)key;
- (void)removeAnimationForKey:(NSString * _Nonnull)key;
- (void)add:(CAAnimation * _Nonnull)animation;
- (void)add:(CAAnimation * _Nonnull)animation useCurrentBeginTime:(BOOL)useCurrentBeginTime;
- (void)add:(CAAnimation * _Nonnull)animation atIndex:(NSInteger)index useCurrentBeginTime:(BOOL)useCurrentBeginTime;
- (void)remove:(CAAnimation * _Nonnull)animation;
@end


@interface CABasicAnimation (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface CABasicAnimation (SWIFT_EXTENSION(KiteKit))
+ (NSString * _Nonnull)defaultName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CABasicAnimation (SWIFT_EXTENSION(KiteKit))
- (void)updateLayerWithFinalModelValue:(CALayer * _Nonnull)layer;
@end


@interface CABasicAnimation (SWIFT_EXTENSION(KiteKit)) <BasicAnimationScriptingExports>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) id _Nullable animationToValue;
@property (nonatomic) id _Nullable animationFromValue;
@property (nonatomic) id _Nullable animationByValue;
@end






@interface CAEmitterCell (SWIFT_EXTENSION(KiteKit))
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
@end








SWIFT_PROTOCOL("_TtP7KiteKit19ValueChangeDelegate_")
@protocol ValueChangeDelegate
- (void)valueChanged:(id _Nonnull)value forKey:(NSString * _Nonnull)key;
@end


SWIFT_PROTOCOL("_TtP7KiteKit24EmitterCellScriptExports_")
@protocol EmitterCellScriptExports <MediaTimingScriptExports>
+ (CAEmitterCell * _Nonnull)emitterCell:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (id _Nullable)defaultValueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldArchiveValueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) BOOL cellEnabled;
@property (nonatomic) float birthRate;
@property (nonatomic) float lifetime;
@property (nonatomic) float lifetimeRange;
@property (nonatomic) CGFloat emissionLatitude;
@property (nonatomic) CGFloat emissionLongitude;
@property (nonatomic) CGFloat emissionRange;
@property (nonatomic) CGFloat velocity;
@property (nonatomic) CGFloat velocityRange;
@property (nonatomic) CGFloat xAcceleration;
@property (nonatomic) CGFloat yAcceleration;
@property (nonatomic) CGFloat zAcceleration;
@property (nonatomic) CGFloat scale;
@property (nonatomic) CGFloat scaleRange;
@property (nonatomic) CGFloat scaleSpeed;
@property (nonatomic) CGFloat spin;
@property (nonatomic) CGFloat spinRange;
@property (nonatomic, strong) UIColor * _Nullable cellColor;
@property (nonatomic) float redRange;
@property (nonatomic) float greenRange;
@property (nonatomic) float blueRange;
@property (nonatomic) float alphaRange;
@property (nonatomic) float redSpeed;
@property (nonatomic) float greenSpeed;
@property (nonatomic) float blueSpeed;
@property (nonatomic) float alphaSpeed;
@property (nonatomic) id _Nullable contents;
@property (nonatomic, strong) id _Nonnull cellContentsRect;
@property (nonatomic, copy) NSString * _Nonnull minificationFilter;
@property (nonatomic, copy) NSString * _Nonnull magnificationFilter;
@property (nonatomic) float minificationFilterBias;
@property (nonatomic, copy) NSArray<CAEmitterCell *> * _Nullable emitterCells;
@property (nonatomic, copy) NSDictionary * _Nullable style;
@end


@interface CAEmitterCell (SWIFT_EXTENSION(KiteKit)) <EmitterCellScriptExports, ValueChangeDelegate>
@property (nonatomic, copy) NSString * _Nonnull scriptFillMode;
+ (CAEmitterCell * _Nonnull)emitterCell:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) UIColor * _Nullable cellColor;
@property (nonatomic, strong) id _Nonnull cellContentsRect;
@property (nonatomic) BOOL cellEnabled;
- (void)valueChanged:(id _Nonnull)value forKey:(NSString * _Nonnull)key;
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
@end




@interface CAEmitterLayer (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface CAEmitterLayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end




SWIFT_PROTOCOL("_TtP7KiteKit25EmitterLayerScriptExports_")
@protocol EmitterLayerScriptExports <LayerScriptExports>
@property (nonatomic, copy) NSArray<CAEmitterCell *> * _Nullable emitterCells;
@property (nonatomic) float birthRate;
@property (nonatomic) float lifetime;
@property (nonatomic, strong) id _Nonnull layerEmitterPosition;
@property (nonatomic) CGFloat emitterZPosition;
@property (nonatomic, strong) id _Nonnull layerEmitterSize;
@property (nonatomic) CGFloat emitterDepth;
@property (nonatomic, copy) NSString * _Nonnull scriptEmitterShape;
@property (nonatomic, copy) NSString * _Nonnull scriptEmitterMode;
@property (nonatomic, copy) NSString * _Nonnull scriptRenderMode;
@property (nonatomic) BOOL preservesDepth;
@property (nonatomic) float velocity;
@property (nonatomic) float emitterScale;
@property (nonatomic) float spin;
@property (nonatomic) uint32_t seed;
@end


@interface CAEmitterLayer (SWIFT_EXTENSION(KiteKit)) <EmitterLayerScriptExports>
@property (nonatomic, copy) NSString * _Nonnull scriptEmitterShape;
@property (nonatomic, copy) NSString * _Nonnull scriptEmitterMode;
@property (nonatomic, copy) NSString * _Nonnull scriptRenderMode;
@property (nonatomic, strong) id _Nonnull layerEmitterSize;
@property (nonatomic, strong) id _Nonnull layerEmitterPosition;
@property (nonatomic) float emitterScale;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAGradientLayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface CAGradientLayer (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end

@class NSNumber;

SWIFT_PROTOCOL("_TtP7KiteKit26GradientLayerScriptExports_")
@protocol GradientLayerScriptExports <LayerScriptExports>
@property (nonatomic, copy) NSArray<UIColor *> * _Nullable colorStops;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable locations;
@property (nonatomic, strong) id _Nonnull gradientStartPoint;
@property (nonatomic, strong) id _Nonnull gradientEndPoint;
@property (nonatomic, copy) NSString * _Nonnull scriptType;
@end


@interface CAGradientLayer (SWIFT_EXTENSION(KiteKit)) <GradientLayerScriptExports>
@property (nonatomic, copy) NSString * _Nonnull scriptType;
@property (nonatomic, copy) NSArray<UIColor *> * _Nullable colorStops;
@property (nonatomic, strong) id _Nonnull gradientStartPoint;
@property (nonatomic, strong) id _Nonnull gradientEndPoint;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAKeyframeAnimation (SWIFT_EXTENSION(KiteKit))
+ (NSString * _Nonnull)defaultName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAKeyframeAnimation (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface CAKeyframeAnimation (SWIFT_EXTENSION(KiteKit))
- (void)updateLayerWithFinalModelValue:(CALayer * _Nonnull)layer;
@end


SWIFT_PROTOCOL("_TtP7KiteKit33KeyframeAnimationScriptingExports_")
@protocol KeyframeAnimationScriptingExports <PropertyAnimationScriptingExports>
@property (nonatomic, copy) NSArray * _Nullable animationValues;
@property (nonatomic, strong) UIBezierPath * _Nullable animationPath;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable keyTimes;
@property (nonatomic, copy) NSArray<CAMediaTimingFunction *> * _Nullable timingFunctions;
@property (nonatomic, copy) NSString * _Nonnull scriptCalculationMode;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable tensionValues;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable continuityValues;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable biasValues;
@property (nonatomic, copy) NSString * _Nullable scriptRotationMode;
@end


@interface CAKeyframeAnimation (SWIFT_EXTENSION(KiteKit)) <KeyframeAnimationScriptingExports>
@property (nonatomic, strong) UIBezierPath * _Nullable animationPath;
@property (nonatomic, copy) NSArray * _Nullable animationValues;
@property (nonatomic, copy) NSString * _Nonnull scriptCalculationMode;
@property (nonatomic, copy) NSString * _Nullable scriptRotationMode;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CALayer (SWIFT_EXTENSION(KiteKit))
- (enum ResponseTriggerDecision)canTriggerWithResponseType:(ActionResponseType * _Nonnull)responseType SWIFT_WARN_UNUSED_RESULT;
@end










@interface CALayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface CALayer (SWIFT_EXTENSION(KiteKit))
- (void)applyPresentationPositionRemovingAnimations;
- (void)applyPresentationBoundsRemovingAnimations;
@end


@interface CALayer (SWIFT_EXTENSION(KiteKit))
- (void)presentationPlaybackDidStartInContext:(PresentationContext * _Nonnull)context;
- (void)prepareForPresentationExitInContext:(PresentationContext * _Nonnull)context;
@end



@class PresentationEvent;

@interface CALayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)handleEvent:(PresentationEvent * _Nonnull)event SWIFT_WARN_UNUSED_RESULT;
@end






@interface CALayer (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface CALayer (SWIFT_EXTENSION(KiteKit))
@property (nonatomic, readonly, copy) NSArray<Action *> * _Nonnull interactions;
@end








@interface CALayer (SWIFT_EXTENSION(KiteKit))
@property (nonatomic) BOOL ignoresPresentationHitTesting;
- (CALayer * _Nullable)presentationHitTest:(CGPoint)point SWIFT_WARN_UNUSED_RESULT;
@end


@interface CALayer (SWIFT_EXTENSION(KiteKit)) <AnimationsContainerOwner>
@property (nonatomic, readonly, copy) NSArray<CAAnimation *> * _Nullable animations;
@property (nonatomic, readonly, copy) NSArray<CAAnimation *> * _Nonnull allAnimations;
- (void)readd:(CAAnimation * _Nonnull)animation forKey:(NSString * _Nullable)key;
- (void)add:(CAAnimation * _Nonnull)animation;
- (void)add:(CAAnimation * _Nonnull)animation useCurrentBeginTime:(BOOL)useCurrentBeginTime;
- (void)add:(CAAnimation * _Nonnull)animation atIndex:(NSInteger)index useCurrentBeginTime:(BOOL)useCurrentBeginTime;
- (void)remove:(CAAnimation * _Nonnull)animation;
@end


@interface CALayer (SWIFT_EXTENSION(KiteKit))
@property (nonatomic) BOOL allowsImplicitAnimations;
- (id <CAAction> _Nullable)actionForLayer:(CALayer * _Nonnull)layer forKey:(NSString * _Nonnull)event SWIFT_WARN_UNUSED_RESULT;
@end


@interface CALayer (SWIFT_EXTENSION(KiteKit)) <LayerScriptExports, ValueChangeDelegate, CALayerDelegate>
@property (nonatomic, readonly, strong) MetadataDictionary * _Nonnull data;
- (JRObservationInfo * _Nullable)observe:(NSString * _Nonnull)keyPath :(JSValue * _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) JRObservationController * _Nonnull observationController;
+ (CALayer * _Nonnull)layer:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
- (void)addScriptAnimation:(CAAnimation * _Nonnull)anim;
- (NSArray<CALayer *> * _Nonnull)getLayersByName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (CALayer * _Nullable)getLayerByName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) JSValue * _Nullable drawLayerInContext;
- (void)drawLayer:(CALayer * _Nonnull)layer inContext:(CGContextRef _Nonnull)ctx;
@property (nonatomic, strong) JSValue * _Nullable mouseDown;
@property (nonatomic, strong) JSValue * _Nullable mouseUp;
@property (nonatomic, strong) JSValue * _Nullable mouseMoved;
@property (nonatomic, strong) JSValue * _Nullable mouseEntered;
@property (nonatomic, strong) JSValue * _Nullable mouseExited;
@property (nonatomic, strong) JSValue * _Nullable mouseDragged;
@property (nonatomic, strong) JSValue * _Nullable scrollWheel;
@property (nonatomic, strong) JSValue * _Nullable keyDown;
@property (nonatomic, strong) JSValue * _Nullable keyUp;
@property (nonatomic, strong) JSValue * _Nullable magnifyGesture;
@property (nonatomic, strong) JSValue * _Nullable rotateGesture;
@property (nonatomic, strong) JSValue * _Nullable swipeGesture;
@property (nonatomic, strong) JSValue * _Nullable canvasReady;
@property (nonatomic, strong) JSValue * _Nullable pressureChanged;
@property (nonatomic) CGFloat rotation;
@property (nonatomic) CGFloat rotationX;
@property (nonatomic) CGFloat rotationY;
@property (nonatomic) CGFloat rotationZ;
@property (nonatomic) CGFloat layerScale;
@property (nonatomic) CGFloat scaleX;
@property (nonatomic) CGFloat scaleY;
@property (nonatomic) CGFloat scaleZ;
@property (nonatomic) CGSize translation;
@property (nonatomic) CGFloat translationX;
@property (nonatomic) CGFloat translationY;
@property (nonatomic) CGFloat translationZ;
@property (nonatomic) CGFloat sublayerRotation;
@property (nonatomic) CGFloat sublayerRotationX;
@property (nonatomic) CGFloat sublayerRotationY;
@property (nonatomic) CGFloat sublayerRotationZ;
@property (nonatomic) CGFloat sublayerScale;
@property (nonatomic) CGFloat sublayerScaleX;
@property (nonatomic) CGFloat sublayerScaleY;
@property (nonatomic) CGFloat sublayerScaleZ;
@property (nonatomic) CGSize sublayerTranslation;
@property (nonatomic) CGFloat sublayerTranslationX;
@property (nonatomic) CGFloat sublayerTranslationY;
@property (nonatomic) CGFloat sublayerTranslationZ;
@property (nonatomic, strong) UIColor * _Nullable layerBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable layerBorderColor;
@property (nonatomic, strong) UIColor * _Nullable layerShadowColor;
@property (nonatomic, strong) UIBezierPath * _Nullable layerShadowPath;
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@property (nonatomic) CGFloat z;
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
@property (nonatomic, strong) id _Nonnull layerBounds;
@property (nonatomic, strong) id _Nonnull layerPosition;
@property (nonatomic, strong) id _Nonnull layerAnchorPoint;
@property (nonatomic, strong) id _Nonnull layerFrame;
@property (nonatomic, strong) id _Nonnull layerContentsRect;
@property (nonatomic, strong) id _Nonnull layerContentsCenter;
@property (nonatomic, strong) id _Nonnull layerShadowOffset;
@property (nonatomic) BOOL layerHidden;
@property (nonatomic) BOOL layerDoubleSided;
@property (nonatomic) BOOL layerGeometryFlipped;
@property (nonatomic) BOOL layerOpaque;
@property (nonatomic) CACornerMask layerMaskedCorners;
@property (nonatomic, copy) NSString * _Nonnull scriptContentsGravity;
@property (nonatomic, copy) NSString * _Nonnull scriptMinificationFilter;
@property (nonatomic, copy) NSString * _Nonnull scriptMagnificationFilter;
@property (nonatomic, copy) NSString * _Nonnull scriptFillMode;
- (void)valueChanged:(id _Nonnull)value forKey:(NSString * _Nonnull)key;
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end








SWIFT_PROTOCOL("_TtP7KiteKit35MediaTimingFunctionScriptingExports_")
@protocol MediaTimingFunctionScriptingExports <JSExport>
+ (CAMediaTimingFunction * _Nonnull)functionWithName:(NSString * _Nonnull)name :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (CAMediaTimingFunction * _Nonnull)functionWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAMediaTimingFunction (SWIFT_EXTENSION(KiteKit)) <MediaTimingFunctionScriptingExports>
+ (CAMediaTimingFunction * _Nonnull)functionWithName:(NSString * _Nonnull)name :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (CAMediaTimingFunction * _Nonnull)functionWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
@end


SWIFT_CLASS("_TtC7KiteKit19CAPackageUnarchiver")
@interface CAPackageUnarchiver : NSKeyedUnarchiver
+ (Class _Nullable)classForClassName:(NSString * _Nonnull)codedName SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initForReadingFromData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=11.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=2.0,deprecated=12.0);
- (nonnull instancetype)initForReadingWithData:(NSData * _Nonnull)data OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=2.0,deprecated=12.0);
@end


@interface CAPropertyAnimation (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface CAPropertyAnimation (SWIFT_EXTENSION(KiteKit))
@property (nonatomic, readonly) BOOL modifiesPosition;
@property (nonatomic, readonly) BOOL modifiesBounds;
- (BOOL)modifiesKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAPropertyAnimation (SWIFT_EXTENSION(KiteKit)) <PropertyAnimationScriptingExports>
@property (nonatomic) BOOL animationAdditive;
@property (nonatomic) BOOL animationCumulative;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAReplicatorLayer (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface CAReplicatorLayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP7KiteKit28ReplicatorLayerScriptExports_")
@protocol ReplicatorLayerScriptExports <LayerScriptExports>
@property (nonatomic) NSInteger instanceCount;
@property (nonatomic) BOOL preservesDepth;
@property (nonatomic) CFTimeInterval instanceDelay;
@property (nonatomic) CATransform3D instanceTransform;
@property (nonatomic, strong) UIColor * _Nullable layerInstanceColor;
@property (nonatomic) float instanceRedOffset;
@property (nonatomic) float instanceGreenOffset;
@property (nonatomic) float instanceBlueOffset;
@property (nonatomic) float instanceAlphaOffset;
@end


@interface CAReplicatorLayer (SWIFT_EXTENSION(KiteKit)) <ReplicatorLayerScriptExports>
@property (nonatomic, strong) UIColor * _Nullable layerInstanceColor;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAScrollLayer (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface CAScrollLayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP7KiteKit24ScrollLayerScriptExports_")
@protocol ScrollLayerScriptExports <LayerScriptExports>
- (void)scrollToPoint:(CGPoint)p;
- (void)scrollToRect:(CGRect)r;
@property (nonatomic, copy) NSString * _Nonnull scriptScrollMode;
@end


@interface CAScrollLayer (SWIFT_EXTENSION(KiteKit)) <ScrollLayerScriptExports>
@property (nonatomic, copy) NSString * _Nonnull scriptScrollMode;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAShapeLayer (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface CAShapeLayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP7KiteKit23ShapeLayerScriptExports_")
@protocol ShapeLayerScriptExports <LayerScriptExports>
@property (nonatomic, strong) UIBezierPath * _Nullable shapePath;
@property (nonatomic, strong) UIColor * _Nullable layerFillColor;
@property (nonatomic, copy) NSString * _Nonnull scriptFillRule;
@property (nonatomic, strong) UIColor * _Nullable layerStrokeColor;
@property (nonatomic) CGFloat strokeStart;
@property (nonatomic) CGFloat strokeEnd;
@property (nonatomic) CGFloat lineWidth;
@property (nonatomic) CGFloat miterLimit;
@property (nonatomic, copy) NSString * _Null_unspecified scriptLineCap;
@property (nonatomic, copy) NSString * _Nonnull scriptLineJoin;
@property (nonatomic) CGFloat lineDashPhase;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable lineDashPattern;
@end


@interface CAShapeLayer (SWIFT_EXTENSION(KiteKit)) <ShapeLayerScriptExports>
@property (nonatomic, copy) NSString * _Nonnull scriptFillRule;
@property (nonatomic, copy) NSString * _Null_unspecified scriptLineCap;
@property (nonatomic, copy) NSString * _Nonnull scriptLineJoin;
@property (nonatomic, strong) UIColor * _Nullable layerFillColor;
@property (nonatomic, strong) UIColor * _Nullable layerStrokeColor;
@property (nonatomic, strong) UIBezierPath * _Nullable shapePath;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CASpringAnimation (SWIFT_EXTENSION(KiteKit))
+ (NSString * _Nonnull)defaultName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CASpringAnimation (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP7KiteKit31SpringAnimationScriptingExports_")
@protocol SpringAnimationScriptingExports <BasicAnimationScriptingExports>
@property (nonatomic) CGFloat mass;
@property (nonatomic) CGFloat stiffness;
@property (nonatomic) CGFloat damping;
@property (nonatomic) CGFloat initialVelocity;
@property (nonatomic, readonly) CFTimeInterval settlingDuration;
@end


@interface CASpringAnimation (SWIFT_EXTENSION(KiteKit)) <SpringAnimationScriptingExports>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end




@interface CATextLayer (SWIFT_EXTENSION(KiteKit))
- (enum ResponseTriggerDecision)canTriggerWithResponseType:(ActionResponseType * _Nonnull)responseType SWIFT_WARN_UNUSED_RESULT;
@end


@interface CATextLayer (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface CATextLayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP7KiteKit22TextLayerScriptExports_")
@protocol TextLayerScriptExports <LayerScriptExports>
@property (nonatomic) id _Nullable layerString;
@property (nonatomic, strong) id _Nullable font;
@property (nonatomic) CGFloat fontSize;
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic) BOOL layerWrapped;
@property (nonatomic, copy) NSString * _Nonnull scriptTruncationMode;
@property (nonatomic, copy) NSString * _Nonnull scriptAlignmentMode;
@property (nonatomic) BOOL allowsFontSubpixelQuantization;
@end


@interface CATextLayer (SWIFT_EXTENSION(KiteKit)) <TextLayerScriptExports>
@property (nonatomic, copy) NSString * _Nonnull scriptTruncationMode;
@property (nonatomic, copy) NSString * _Nonnull scriptAlignmentMode;
@property (nonatomic) id _Nullable layerString;
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic) BOOL layerWrapped;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CATiledLayer (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface CATiledLayer (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP7KiteKit23TiledLayerScriptExports_")
@protocol TiledLayerScriptExports <LayerScriptExports>
+ (CFTimeInterval)fadeDuration SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) NSInteger levelsOfDetail;
@property (nonatomic) NSInteger levelsOfDetailBias;
@property (nonatomic, strong) id _Nonnull layerTileSize;
@end


@interface CATiledLayer (SWIFT_EXTENSION(KiteKit)) <TiledLayerScriptExports>
@property (nonatomic, strong) id _Nonnull layerTileSize;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull propertyMapping;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)propertyMapping SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull javaScriptClassName;)
+ (NSString * _Nonnull)javaScriptClassName SWIFT_WARN_UNUSED_RESULT;
@end




@interface CATransition (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface CATransition (SWIFT_EXTENSION(KiteKit))
+ (NSString * _Nonnull)defaultName SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_PROTOCOL("_TtP7KiteKit29ValueFunctionScriptingExports_")
@protocol ValueFunctionScriptingExports <JSExport>
+ (CAValueFunction * _Nullable)functionWithName:(NSString * _Nonnull)name :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
@end


@interface CAValueFunction (SWIFT_EXTENSION(KiteKit)) <ValueFunctionScriptingExports>
+ (CAValueFunction * _Nullable)functionWithName:(NSString * _Nonnull)name :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
@end



@class CIImage;
@protocol CIFilterConstructor;

SWIFT_PROTOCOL("_TtP7KiteKit22FilterScriptingExports_")
@protocol FilterScriptingExports <JSExport>
@property (nonatomic, readonly, strong) CIImage * _Nullable outputImage;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)valueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(id _Nullable)value forKey:(NSString * _Nonnull)key;
- (id _Nullable)valueForKeyPath:(NSString * _Nonnull)keyPath SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(id _Nullable)value forKeyPath:(NSString * _Nonnull)keyPath;
/// Returns an array containing the names of all inputs in the filter.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull inputKeys;
/// Returns an array containing the names of all outputs in the filter.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull outputKeys;
/// Sets all inputs to their default values (where default values are defined, other inputs are left as-is).
- (void)setDefaults;
/// Returns a dictionary containing key/value pairs describing the filter. (see description of keys below)
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// Creates a new filter of type ‘name’.
/// On OSX, all input values will be undefined.
/// On iOS, all input values will be set to default values.
+ (CIFilter * _Nullable)filterWithName:(NSString * _Nonnull)name :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (CIFilter * _Nullable)filterWithName:(NSString * _Nonnull)name withInputParameters:(NSDictionary<NSString *, id> * _Nullable)params :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
/// Returns an array containing all published filter names in a category.
+ (NSArray<NSString *> * _Nonnull)filterNamesInCategory:(NSString * _Nullable)category :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
/// Returns an array containing all published filter names that belong to all listed categories.
+ (NSArray<NSString *> * _Nonnull)filterNamesInCategories:(NSArray<NSString *> * _Nullable)categories :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
/// Publishes a new filter called ‘name’.
/// \code
/// The constructor object 'anObject' should implement the filterWithName: method.
/// That method will be invoked with the name of the filter to create.
/// The class attributes must have a kCIAttributeFilterCategories key associated with a set of categories.
/// @param   attributes    Dictionary of the registration attributes of the filter. See below for attribute keys.
///
/// \endcode
+ (void)registerFilterName:(NSString * _Nonnull)name constructor:(id <CIFilterConstructor> _Nonnull)anObject classAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes :(id _Nullable)ex;
/// Returns the localized name of a filter for display in the UI.
+ (NSString * _Nullable)localizedNameForFilterName:(NSString * _Nonnull)filterName SWIFT_WARN_UNUSED_RESULT;
/// Returns the localized name of a category for display in the UI.
+ (NSString * _Nonnull)localizedNameForCategory:(NSString * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
/// Returns the localized description of a filter for display in the UI.
+ (NSString * _Nullable)localizedDescriptionForFilterName:(NSString * _Nonnull)filterName SWIFT_WARN_UNUSED_RESULT;
/// Returns the URL to the localized reference documentation describing the filter.
/// \code
/// The URL can be a local file or a remote document on a webserver. It is possible, that this method returns nil (like filters that predate this feature). A client of this API has to handle this case gracefully. 
///
/// \endcode
+ (NSURL * _Nullable)localizedReferenceDocumentationForFilterName:(NSString * _Nonnull)filterName SWIFT_WARN_UNUSED_RESULT;
@end


@interface CIFilter (SWIFT_EXTENSION(KiteKit)) <FilterScriptingExports>
+ (CIFilter * _Nullable)filterWithName:(NSString * _Nonnull)name :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (CIFilter * _Nullable)filterWithName:(NSString * _Nonnull)name withInputParameters:(NSDictionary<NSString *, id> * _Nullable)params :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)filterNamesInCategory:(NSString * _Nullable)category :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)filterNamesInCategories:(NSArray<NSString *> * _Nullable)categories :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (void)registerFilterName:(NSString * _Nonnull)name constructor:(id <CIFilterConstructor> _Nonnull)anObject classAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes :(id _Nullable)ex;
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
@end


SWIFT_CLASS_NAMED("CallJavaScriptFunctionActionResponse")
@interface JRCallJavaScriptFunctionActionResponse : ActionResponse
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRCallJavaScriptFunctionActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface JRCallJavaScriptFunctionActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_CLASS("_TtC7KiteKit14CanvasFileInfo")
@interface CanvasFileInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit10CanvasInfo")
@interface CanvasInfo : NSObject
@property (nonatomic, readonly) CGSize canvasSize;
@property (nonatomic, readonly, strong) CALayer * _Nullable rootLayer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)loadCanvasForQuickLook;
@end

@class ResolvedCanvasPageCache;
@protocol CanvasReferenceResolverDelegate;
@class PageLayer;

SWIFT_CLASS("_TtC7KiteKit23CanvasReferenceResolver")
@interface CanvasReferenceResolver : NSObject
@property (nonatomic, readonly, strong) ResolvedCanvasPageCache * _Nonnull resolvedCanvasPageCache;
@property (nonatomic, weak) id <CanvasReferenceResolverDelegate> _Nullable delegate;
- (nullable instancetype)initWithPageLayers:(NSArray<PageLayer *> * _Nonnull)pageLayers canvasInfo:(CanvasInfo * _Nonnull)canvasInfo;
- (void)fillCanvasReferences;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP7KiteKit31CanvasReferenceResolverDelegate_")
@protocol CanvasReferenceResolverDelegate
- (void)canvasReferenceResolver:(CanvasReferenceResolver * _Nonnull)resolver received:(NSString * _Nonnull)localizedWarning;
@end


SWIFT_CLASS("_TtC7KiteKit24CanvasTransitionResolver")
@interface CanvasTransitionResolver : NSObject <CanvasReferenceResolverDelegate>
- (nonnull instancetype)initWithCanvasIDs:(NSArray<NSString *> * _Nonnull)canvasIDs context:(PresentationContext * _Nonnull)context pageCache:(ResolvedCanvasPageCache * _Nonnull)pageCache canvasInfo:(CanvasInfo * _Nonnull)canvasInfo OBJC_DESIGNATED_INITIALIZER;
- (void)resolveCanvasReferences;
- (void)canvasReferenceResolver:(CanvasReferenceResolver * _Nonnull)resolver received:(NSString * _Nonnull)localizedWarning;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class NSCoder;

SWIFT_CLASS("_TtC7KiteKit12ContentImage")
@interface ContentImage : UIImage
- (nullable instancetype)initWithContentsOfFile:(NSString * _Nonnull)path OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithData:(NSData * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithData:(NSData * _Nonnull)data scale:(CGFloat)scale OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=6.0);
- (nonnull instancetype)initWithCGImage:(CGImageRef _Nonnull)cgImage OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCGImage:(CGImageRef _Nonnull)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=4.0);
- (nonnull instancetype)initWithCIImage:(CIImage * _Nonnull)ciImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithCIImage:(CIImage * _Nonnull)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=6.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end








SWIFT_CLASS("_TtC7KiteKit11CopyingInfo")
@interface CopyingInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit31ToggleActionStateActionResponse")
@interface ToggleActionStateActionResponse : ActionReferencingActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DisableActionsActionResponse")
@interface JRDisableActionsActionResponse : ToggleActionStateActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit12DocumentInfo")
@interface DocumentInfo : NSObject
@property (nonatomic, readonly, copy) NSArray<CanvasInfo *> * _Nonnull canvasInfos;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit24DocumentPreviewOperation")
@interface DocumentPreviewOperation : AsyncOperation
- (void)start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC7KiteKit11EmptyObject")
@interface EmptyObject : NSObject <NSCoding>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EnableActionsActionResponse")
@interface JREnableActionsActionResponse : ToggleActionStateActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit12EventHandler")
@interface EventHandler : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



SWIFT_CLASS_NAMED("GenerateHapticFeedbackActionResponse")
@interface GenerateHapticFeedbackActionResponse : ActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit8Geometry")
@interface Geometry : NSObject
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit26UserInteractionActionEvent")
@interface UserInteractionActionEvent : ActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


SWIFT_CLASS_NAMED("GestureMagnifyActionEvent")
@interface JRGestureMagnifyActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRGestureMagnifyActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface JRGestureMagnifyActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS_NAMED("GestureRotateActionEvent")
@interface JRGestureRotateActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRGestureRotateActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface JRGestureRotateActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_CLASS_NAMED("GestureSwipeActionEvent")
@interface JRGestureSwipeActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRGestureSwipeActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface JRGestureSwipeActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS_NAMED("GoToTimeActionResponse")
@interface JRGoToTimeActionResponse : ActionResponse
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRGoToTimeActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface JRGoToTimeActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end



SWIFT_CLASS("_TtC7KiteKit15GraphicsContext")
@interface GraphicsContext : NSObject
@property (nonatomic, readonly) CGContextRef _Nonnull CGContext;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP7KiteKit31GraphicsContextScriptingExports_")
@protocol GraphicsContextScriptingExports <JSExport>
@property (nonatomic, readonly) CGContextRef _Nonnull CGContext;
@end


@interface GraphicsContext (SWIFT_EXTENSION(KiteKit)) <GraphicsContextScriptingExports>
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
@end



SWIFT_CLASS("_TtC7KiteKit14ImageAssetInfo")
@interface ImageAssetInfo : AssetInfo
@end


SWIFT_CLASS("_TtC7KiteKit19ImageCanvasFileInfo")
@interface ImageCanvasFileInfo : CanvasFileInfo
@end

@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC7KiteKit24InitialGestureRecognizer")
@interface InitialGestureRecognizer : UIGestureRecognizer
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (nonnull instancetype)initWithTarget:(id _Nullable)target action:(SEL _Nullable)action SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7KiteKit11ItemCatalog")
@interface ItemCatalog : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit11JRCAPackage")
@interface JRCAPackage : NSObject
@property (nonatomic, readonly, strong) CALayer * _Nonnull rootLayer;
@property (nonatomic, readonly) CGSize documentSizeObjc;
@property (nonatomic, readonly) BOOL isGeometryFlipedObjc;
- (nullable instancetype)initWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP7KiteKit23JRPointScriptingExports_")
@protocol JRPointScriptingExports <JSExport>
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@end


SWIFT_CLASS("_TtC7KiteKit7JRPoint")
@interface JRPoint : NSObject <JRPointScriptingExports>
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP7KiteKit22JRRectScriptingExports_")
@protocol JRRectScriptingExports <JSExport>
@property (nonatomic, strong) id _Nullable origin;
@property (nonatomic, strong) id _Nullable size;
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
@end


SWIFT_CLASS("_TtC7KiteKit6JRRect")
@interface JRRect : NSObject <JRRectScriptingExports, ValueChangeDelegate>
@property (nonatomic, strong) id _Nullable origin;
@property (nonatomic, strong) id _Nullable size;
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
- (void)valueChanged:(id _Nonnull)value forKey:(NSString * _Nonnull)forKey;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



SWIFT_CLASS_NAMED("JRShapeContainerLayer")
@interface JRShapeContainerLayer : CALayer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP7KiteKit22JRSizeScriptingExports_")
@protocol JRSizeScriptingExports <JSExport>
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
@end


SWIFT_CLASS("_TtC7KiteKit6JRSize")
@interface JRSize : NSObject <JRSizeScriptingExports>
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC7KiteKit3Key")
@interface Key : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull cube;)
+ (NSString * _Nonnull)cube SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull flip;)
+ (NSString * _Nonnull)flip SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull rotate;)
+ (NSString * _Nonnull)rotate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull pageCurl;)
+ (NSString * _Nonnull)pageCurl SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull rippleEffect;)
+ (NSString * _Nonnull)rippleEffect SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull suckEffect;)
+ (NSString * _Nonnull)suckEffect SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull scaleIn;)
+ (NSString * _Nonnull)scaleIn SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull scaleOut;)
+ (NSString * _Nonnull)scaleOut SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull navigationPush;)
+ (NSString * _Nonnull)navigationPush SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull navigationPop;)
+ (NSString * _Nonnull)navigationPop SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit14KeyActionEvent")
@interface KeyActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface KeyActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface KeyActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_CLASS_NAMED("KeyDownActionEvent")
@interface JRKeyDownActionEvent : KeyActionEvent
- (nonnull instancetype)init;
@end


SWIFT_CLASS_NAMED("KeyUpActionEvent")
@interface JRKeyUpActionEvent : KeyActionEvent
- (nonnull instancetype)init;
@end


@protocol UIViewControllerTransitionCoordinator;

SWIFT_CLASS("_TtC7KiteKit24KiteBasePresentationView")
@interface KiteBasePresentationView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)didMoveToWindow;
- (void)viewWillTransitionTo:(CGSize)size with:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NSBundle;

SWIFT_CLASS("_TtC7KiteKit34KiteBasePresentationViewController")
@interface KiteBasePresentationViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7KiteKit18KiteCanvasFileInfo")
@interface KiteCanvasFileInfo : CanvasFileInfo
@end


SWIFT_CLASS("_TtC7KiteKit12KiteDocument")
@interface KiteDocument : NSObject
@property (nonatomic, readonly, strong) DocumentInfo * _Nullable documentInfo;
- (nonnull instancetype)initWithFileURL:(NSURL * _Nonnull)url OBJC_DESIGNATED_INITIALIZER;
- (BOOL)readForQuickLook SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@class PresentationPanGestureRecognizer;
@class PresentationPinchGestureRecognizer;
@class PresentationRotationGestureRecognizer;

SWIFT_CLASS("_TtC7KiteKit20KitePresentationView")
@interface KitePresentationView : KiteBasePresentationView <UIKeyInput>
@property (nonatomic, readonly, strong) UIView * _Nullable inputView;
@property (nonatomic) UITextAutocorrectionType autocorrectionType;
- (void)viewWillTransitionTo:(CGSize)size with:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)didMoveToWindow;
@property (nonatomic, readonly) BOOL canBecomeFirstResponder;
- (void)layoutSubviews;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL hasText;
- (void)insertText:(NSString * _Nonnull)text;
- (void)deleteBackward;
- (IBAction)panGestureWithRecognizer:(PresentationPanGestureRecognizer * _Nonnull)recognizer;
- (IBAction)pinchGestureWithRecognizer:(PresentationPinchGestureRecognizer * _Nonnull)recognizer;
- (IBAction)rotateGestureWithRecognizer:(PresentationRotationGestureRecognizer * _Nonnull)recognizer;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit30KitePresentationViewController")
@interface KitePresentationViewController : KiteBasePresentationViewController
@property (nonatomic, readonly) UIStatusBarAnimation preferredStatusBarUpdateAnimation;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) UIRectEdge preferredScreenEdgesDeferringSystemGestures;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS_NAMED("LayerValueChangedActionEvent")
@interface LayerValueChangedActionEvent : ActionEvent
- (nonnull instancetype)init;
- (void)observedValueChanged:(NSDictionary<NSString *, id> * _Nonnull)changeInfo;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface LayerValueChangedActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)restoreItemIdentifiersFrom:(ItemCatalog * _Nonnull)catalog;
@end


@interface LayerValueChangedActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface LayerValueChangedActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end

@class AVQueuePlayer;
@class AVPlayerItem;

SWIFT_CLASS("_TtC7KiteKit12LooperHelper")
@interface LooperHelper : AVPlayerLooper
- (nonnull instancetype)initWithPlayer:(AVQueuePlayer * _Nonnull)player templateItem:(AVPlayerItem * _Nonnull)itemToLoop timeRange:(CMTimeRange)loopRange OBJC_DESIGNATED_INITIALIZER;
- (void)disableLooping;
@end


SWIFT_CLASS("_TtC7KiteKit13LoopingPlayer")
@interface LoopingPlayer : AVQueuePlayer
- (void)preloadMediaForPlaybackWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)stop;
- (void)replaceCurrentItemWithPlayerItem:(AVPlayerItem * _Nullable)item;
@property (nonatomic) BOOL loopMedia;
- (nonnull instancetype)initWithItems:(NSArray<AVPlayerItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithURL:(NSURL * _Nonnull)URL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPlayerItem:(AVPlayerItem * _Nullable)item OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP7KiteKit26LoopingPlayerScriptExports_")
@protocol LoopingPlayerScriptExports <JSExport>
- (void)play;
- (void)pause;
- (void)rewind;
@property (nonatomic) float rate;
@property (nonatomic, readonly) AVPlayerTimeControlStatus timeControlStatus;
@property (nonatomic, readonly) AVPlayerWaitingReason _Nullable reasonForWaitingToPlay;
- (void)playImmediatelyAtRate:(float)rate;
@property (nonatomic, readonly, strong) AVPlayerItem * _Nullable currentItem;
- (void)replaceCurrentItemWithPlayerItem:(AVPlayerItem * _Nullable)item;
@property (nonatomic) AVPlayerActionAtItemEnd actionAtItemEnd;
@property (nonatomic, readonly) BOOL isPlaying;
@end


@interface LoopingPlayer (SWIFT_EXTENSION(KiteKit)) <LoopingPlayerScriptExports>
@property (nonatomic, readonly) BOOL isPlaying;
- (void)rewind;
@end



SWIFT_CLASS_NAMED("MapValueActionResponse")
@interface MapValueActionResponse : ActionResponse
@property (nonatomic, copy) NSString * _Nonnull sourceKeyPath;
@property (nonatomic, copy) NSString * _Nonnull destinationKeyPath;
@property (nonatomic) CGFloat sourceStartValue;
@property (nonatomic) CGFloat sourceEndValue;
@property (nonatomic, copy) NSString * _Nonnull sourceLayerID;
@property (nonatomic, copy) NSString * _Nonnull destinationLayerID;
@property (nonatomic) CGFloat destinationStartValue;
@property (nonatomic) CGFloat destinationEndValue;
@property (nonatomic, strong) CAMediaTimingFunction * _Nonnull mappingFunction;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MapEventValueActionResponse")
@interface MapEventValueActionResponse : MapValueActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MapLayerValueActionResponse")
@interface MapLayerValueActionResponse : MapValueActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface MapValueActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)restoreItemIdentifiersFrom:(ItemCatalog * _Nonnull)catalog;
@end


@interface MapValueActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface MapValueActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS("_TtC7KiteKit10MediaAsset")
@interface MediaAsset : NSObject
@property (nonatomic, readonly) NSUInteger hash;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit16MediaAssetPlayer")
@interface MediaAssetPlayer : NSObject
- (nonnull instancetype)init;
- (void)play;
- (void)replaceAssetWith:(MediaAsset * _Nullable)mediaAsset;
@end




SWIFT_CLASS("_TtC7KiteKit18MetadataDictionary")
@interface MetadataDictionary : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP7KiteKit20MetadataScripExports_")
@protocol MetadataScripExports <JSExport>
- (id _Nullable)dataValueForKey:(NSString * _Nullable)key SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)get:(NSString * _Nullable)key SWIFT_WARN_UNUSED_RESULT;
@end


@interface MetadataDictionary (SWIFT_EXTENSION(KiteKit)) <MetadataScripExports>
- (id _Nullable)dataValueForKey:(NSString * _Nullable)key SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)get:(NSString * _Nullable)key SWIFT_WARN_UNUSED_RESULT;
@end







SWIFT_CLASS("_TtC7KiteKit16MouseActionEvent")
@interface MouseActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface MouseActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface MouseActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS("_TtC7KiteKit22MouseBoundsActionEvent")
@interface MouseBoundsActionEvent : UserInteractionActionEvent
@end


SWIFT_CLASS_NAMED("MouseClickedActionEvent")
@interface JRMouseClickedActionEvent : MouseActionEvent
- (nonnull instancetype)init;
@end


SWIFT_CLASS_NAMED("MouseDownActionEvent")
@interface JRMouseDownActionEvent : MouseActionEvent
- (nonnull instancetype)init;
@end


SWIFT_CLASS_NAMED("MouseDragActionEvent")
@interface JRMouseDragActionEvent : MouseActionEvent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MouseEnteredActionEvent")
@interface JRMouseEnteredActionEvent : MouseBoundsActionEvent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MouseExitedActionEvent")
@interface JRMouseExitedActionEvent : MouseBoundsActionEvent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MouseMoveActionEvent")
@interface JRMouseMovedActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MouseUpActionEvent")
@interface JRMouseUpActionEvent : MouseActionEvent
- (nonnull instancetype)init;
@end


SWIFT_CLASS_NAMED("MoveWithMouseActionResponse")
@interface JRMoveWithMouseActionResponse : ActionResponse
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRMoveWithMouseActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface JRMoveWithMouseActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end




SWIFT_PROTOCOL("_TtP7KiteKit22NumberScriptingExports_")
@protocol NumberScriptingExports <NSObject>
@property (nonatomic, readonly) int8_t charValue;
@property (nonatomic, readonly) uint8_t unsignedCharValue;
@property (nonatomic, readonly) int16_t shortValue;
@property (nonatomic, readonly) uint16_t unsignedShortValue;
@property (nonatomic, readonly) uint32_t unsignedIntValue;
@property (nonatomic, readonly) int64_t longLongValue;
@property (nonatomic, readonly) uint64_t unsignedLongLongValue;
@property (nonatomic, readonly) float floatValue;
@property (nonatomic, readonly) double doubleValue;
@property (nonatomic, readonly) BOOL boolValue;
@property (nonatomic, readonly) NSInteger integerValue;
@property (nonatomic, readonly) NSUInteger unsignedIntegerValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull stringValue;
- (NSComparisonResult)compare:(NSNumber * _Nonnull)otherNumber SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqualToNumber:(NSNumber * _Nonnull)number SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)descriptionWithLocale:(id _Nullable)locale SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSNumber (SWIFT_EXTENSION(KiteKit)) <NumberScriptingExports>
@end


SWIFT_PROTOCOL("_TtP7KiteKit24NSObjectScriptingExports_")
@protocol NSObjectScriptingExports <JSExport>
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)valueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(id _Nullable)value forKey:(NSString * _Nonnull)key;
- (id _Nullable)valueForKeyPath:(NSString * _Nonnull)keyPath SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(id _Nullable)value forKeyPath:(NSString * _Nonnull)keyPath;
@end


@interface NSObject (SWIFT_EXTENSION(KiteKit)) <NSObjectScriptingExports>
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
@end





SWIFT_PROTOCOL("_TtP7KiteKit21ValueScriptingExports_")
@protocol ValueScriptingExports <JSExport>
- (void)getValue:(void * _Nonnull)value;
@property (nonatomic, readonly) int8_t const * _Nonnull objCType;
@property (nonatomic, readonly) id _Nullable nonretainedObjectValue;
+ (NSValue * _Nonnull)valueWithPointer:(void * _Nullable)pointer ex:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) void * _Nullable pointerValue;
- (BOOL)isEqualToValue:(NSValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) CGPoint pointValue;
@property (nonatomic, readonly) CGSize sizeValue;
@property (nonatomic, readonly) CGRect rectValue;
@property (nonatomic, readonly) UIEdgeInsets edgeInsetsValue;
@property (nonatomic, readonly) CGFloat x;
@property (nonatomic, readonly) CGFloat y;
@property (nonatomic, readonly) CGFloat width;
@property (nonatomic, readonly) CGFloat height;
@property (nonatomic, readonly) CGPoint origin;
@property (nonatomic, readonly) CGSize size;
@end


@interface NSValue (SWIFT_EXTENSION(KiteKit)) <ValueScriptingExports>
+ (NSValue * _Nonnull)valueWithPointer:(void * _Nullable)pointer ex:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) CGFloat x;
@property (nonatomic, readonly) CGFloat y;
@property (nonatomic, readonly) CGFloat width;
@property (nonatomic, readonly) CGFloat height;
@property (nonatomic, readonly) CGPoint origin;
@property (nonatomic, readonly) CGSize size;
@end


@interface NSValue (SWIFT_EXTENSION(KiteKit))
@property (nonatomic, readonly) CGPoint pointValue;
@property (nonatomic, readonly) CGSize sizeValue;
@property (nonatomic, readonly) CGRect rectValue;
@property (nonatomic, readonly) UIEdgeInsets edgeInsetsValue;
@end


SWIFT_CLASS("_TtC7KiteKit17NamedManagedValue")
@interface NamedManagedValue : JSManagedValue
- (null_unspecified instancetype)initWithValue:(JSValue * _Null_unspecified)value SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit13NilCanvasInfo")
@interface NilCanvasInfo : CanvasInfo
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("NoActionEvent")
@interface JRNoActionEvent : ActionEvent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("NotificationActionEvent")
@interface JRNotificationActionEvent : ActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRNotificationActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface JRNotificationActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end

enum EventType : NSUInteger;

SWIFT_CLASS("_TtC7KiteKit17PresentationEvent")
@interface PresentationEvent : NSObject
@property (nonatomic, readonly) enum EventType type;
@property (nonatomic, readonly) NSInteger clickCount;
@property (nonatomic, readonly) NSInteger buttonNumber;
@property (nonatomic, readonly) CGPoint locationInView;
@property (nonatomic, readonly) CGPoint locationInWindow;
@property (nonatomic, readonly) CGFloat deltaX;
@property (nonatomic, readonly) CGFloat deltaY;
@property (nonatomic, readonly) CGFloat scrollingDeltaX;
@property (nonatomic, readonly) CGFloat scrollingDeltaY;
@property (nonatomic, readonly, copy) NSString * _Nonnull characters;
@property (nonatomic, readonly) CGFloat magnification;
@property (nonatomic, readonly) float rotation;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSUInteger, EventType, closed) {
  EventTypeLeftMouseDown = 1,
  EventTypeLeftMouseUp = 2,
  EventTypeRightMouseDown = 3,
  EventTypeRightMouseUp = 4,
  EventTypeMouseMoved = 5,
  EventTypeLeftMouseDragged = 6,
  EventTypeRightMouseDragged = 7,
  EventTypeMouseEntered = 8,
  EventTypeMouseExited = 9,
  EventTypeKeyDown = 10,
  EventTypeKeyUp = 11,
  EventTypeFlagsChanged = 12,
  EventTypeAppKitDefined = 13,
  EventTypeSystemDefined = 14,
  EventTypeApplicationDefined = 15,
  EventTypePeriodic = 16,
  EventTypeCursorUpdate = 17,
  EventTypeScrollWheel = 22,
  EventTypeTabletPoint = 23,
  EventTypeTabletProximity = 24,
  EventTypeOtherMouseDown = 25,
  EventTypeOtherMouseUp = 26,
  EventTypeOtherMouseDragged = 27,
  EventTypeGesture = 29,
  EventTypeMagnify = 30,
  EventTypeSwipe = 31,
  EventTypeRotate = 18,
  EventTypeBeginGesture = 19,
  EventTypeEndGesture = 20,
  EventTypeSmartMagnify = 32,
  EventTypeQuickLook = 33,
  EventTypePressure = 34,
  EventTypeCanvasReady = 1001,
  EventTypeTimerFired = 1002,
  EventTypeNotification = 1003,
  EventTypeTimeIntervalFired = 1004,
  EventTypePeek = 1005,
  EventTypePop = 1006,
  EventTypeLayerValueChanged = 1007,
};


SWIFT_CLASS("_TtC7KiteKit29NotificationPresentationEvent")
@interface NotificationPresentationEvent : PresentationEvent
@end



SWIFT_CLASS("_TtC7KiteKit14OtherAssetInfo")
@interface OtherAssetInfo : AssetInfo
@end


SWIFT_CLASS_NAMED("PageLayer")
@interface PageLayer : CALayer
@property (nonatomic, copy) NSString * _Nonnull canvasID;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
- (void)setupAsCopyOfLayer:(CALayer * _Nonnull)layer copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
+ (PageLayer * _Nonnull)defaultPresentationInstanceWith:(CanvasInfo * _Nonnull)canvasInfo bounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_CLASS_NAMED("PauseTimelnePlaybackActionResponse")
@interface JRPauseTimelnePlaybackActionResponse : ActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("PauseVideoActionResponse")
@interface JRPauseVideoActionResponse : ActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("PeekActionEvent")
@interface PeekActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end



@class CIColor;

SWIFT_PROTOCOL("_TtP7KiteKit29PlatformColorScriptingExports_")
@protocol PlatformColorScriptingExports <JSExport>
+ (UIColor * _Nonnull)colorWithPatternImage:(UIImage * _Nonnull)image :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorWithWhite:(CGFloat)white alpha:(CGFloat)alpha :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)colorWithCIColor:(CIColor * _Nonnull)ciColor :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=blackColor) UIColor * _Nonnull black;)
+ (UIColor * _Nonnull)blackColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=darkGrayColor) UIColor * _Nonnull darkGray;)
+ (UIColor * _Nonnull)darkGrayColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=lightGrayColor) UIColor * _Nonnull lightGray;)
+ (UIColor * _Nonnull)lightGrayColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=whiteColor) UIColor * _Nonnull white;)
+ (UIColor * _Nonnull)whiteColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=grayColor) UIColor * _Nonnull gray;)
+ (UIColor * _Nonnull)grayColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=redColor) UIColor * _Nonnull red;)
+ (UIColor * _Nonnull)redColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=greenColor) UIColor * _Nonnull green;)
+ (UIColor * _Nonnull)greenColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=blueColor) UIColor * _Nonnull blue;)
+ (UIColor * _Nonnull)blueColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=cyanColor) UIColor * _Nonnull cyan;)
+ (UIColor * _Nonnull)cyanColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=yellowColor) UIColor * _Nonnull yellow;)
+ (UIColor * _Nonnull)yellowColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=magentaColor) UIColor * _Nonnull magenta;)
+ (UIColor * _Nonnull)magentaColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=orangeColor) UIColor * _Nonnull orange;)
+ (UIColor * _Nonnull)orangeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=purpleColor) UIColor * _Nonnull purple;)
+ (UIColor * _Nonnull)purpleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=brownColor) UIColor * _Nonnull brown;)
+ (UIColor * _Nonnull)brownColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=clearColor) UIColor * _Nonnull clear;)
+ (UIColor * _Nonnull)clearColor SWIFT_WARN_UNUSED_RESULT;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (BOOL)getWhite:(CGFloat * _Nullable)white alpha:(CGFloat * _Nullable)alpha SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=5.0);
- (BOOL)getHue:(CGFloat * _Nullable)hue saturation:(CGFloat * _Nullable)saturation brightness:(CGFloat * _Nullable)brightness alpha:(CGFloat * _Nullable)alpha SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=5.0);
- (BOOL)getRed:(CGFloat * _Nullable)red green:(CGFloat * _Nullable)green blue:(CGFloat * _Nullable)blue alpha:(CGFloat * _Nullable)alpha SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=5.0);
- (UIColor * _Nonnull)colorWithAlphaComponent:(CGFloat)alpha SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, getter=CGColor) CGColorRef _Nonnull cgColor;
@property (nonatomic, readonly, strong, getter=CIColor) CIColor * _Nonnull ciColor;
@end


SWIFT_PROTOCOL("_TtP7KiteKit34PlatfromBezierPathScirptingExports_")
@protocol PlatfromBezierPathScirptingExports <JSExport>
+ (UIBezierPath * _Nonnull)bezierPath:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIBezierPath * _Nonnull)bezierPathWithRect:(CGRect)rect :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIBezierPath * _Nonnull)bezierPathWithOvalInRect:(CGRect)rect :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIBezierPath * _Nonnull)bezierPathWithRoundedRect:(CGRect)rect :(CGFloat)xRadius :(CGFloat)yRadius SWIFT_WARN_UNUSED_RESULT;
- (void)moveToPoint:(CGPoint)point;
- (void)curveToPoint:(CGPoint)endPoint controlPoint1:(CGPoint)controlPoint1 controlPoint2:(CGPoint)controlPoint2;
- (void)lineToPoint:(CGPoint)point;
- (void)addQuadCurveToPoint:(CGPoint)endPoint controlPoint:(CGPoint)controlPoint;
- (void)addArcWithCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise;
- (void)closePath;
- (void)removeAllPoints;
@property (nonatomic) CGFloat lineWidth;
@property (nonatomic) CGLineCap lineCapStyle;
@property (nonatomic) CGLineJoin lineJoinStyle;
@property (nonatomic) CGFloat miterLimit;
@property (nonatomic) CGFloat flatness;
- (void)getLineDash:(CGFloat * _Nullable)pattern count:(NSInteger * _Nullable)count phase:(CGFloat * _Nullable)phase;
- (void)setLineDash:(CGFloat const * _Nullable)pattern count:(NSInteger)count phase:(CGFloat)phase;
- (void)stroke;
- (void)fill;
- (void)addClip;
@property (nonatomic, readonly) BOOL bezierPathEmpty;
@property (nonatomic, readonly) CGPoint currentPoint;
@property (nonatomic, readonly) CGRect bounds;
- (void)appendBezierPath:(UIBezierPath * _Nonnull)bezierPath :(id _Nullable)ex;
- (BOOL)containsPoint:(CGPoint)point SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("PlayAnimationsActionResponse")
@interface JRPlayAnimationsActionResponse : ActionResponse
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRPlayAnimationsActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface JRPlayAnimationsActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface JRPlayAnimationsActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)restoreItemIdentifiersFrom:(ItemCatalog * _Nonnull)itemCatalog;
@end


SWIFT_CLASS_NAMED("PlaySoundActionResponse")
@interface JRPlaySoundActionResponse : ActionResponse
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRPlaySoundActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface JRPlaySoundActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS_NAMED("PlayVideoActionResponse")
@interface JRPlayVideoActionResponse : ActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS_NAMED("PopActionEvent")
@interface PopActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


SWIFT_CLASS_NAMED("PostNotificationActionResponse")
@interface JRPostNotificationActionResponse : ActionResponse
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRPostNotificationActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface JRPostNotificationActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_PROTOCOL("_TtP7KiteKit34PresentationCanvasScriptingExports_")
@protocol PresentationCanvasScriptingExports <JSExport>
@property (nonatomic, readonly, strong) JRSize * _Nonnull size;
@property (nonatomic, readonly) CFTimeInterval currentPresentationTime;
- (NSArray<CALayer *> * _Nonnull)getLayersByName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (CALayer * _Nullable)getLayerByName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (void)addSublayer:(CALayer * _Nonnull)sublayer;
@end


SWIFT_CLASS("_TtC7KiteKit18PresentationCanvas")
@interface PresentationCanvas : NSObject <PresentationCanvasScriptingExports>
@property (nonatomic, readonly, strong) JRSize * _Nonnull size;
@property (nonatomic, readonly) CFTimeInterval currentPresentationTime;
- (NSArray<CALayer *> * _Nonnull)getLayersByName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (CALayer * _Nullable)getLayerByName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (void)addSublayer:(CALayer * _Nonnull)sublayer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit23PresentationCanvasLayer")
@interface PresentationCanvasLayer : CALayer
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (CALayer * _Nullable)hitTest:(CGPoint)p SWIFT_WARN_UNUSED_RESULT;
- (BOOL)handleEvent:(PresentationEvent * _Nonnull)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC7KiteKit19PresentationContext")
@interface PresentationContext : NSObject <CanvasReferenceResolverDelegate>
- (void)canvasReferenceResolver:(CanvasReferenceResolver * _Nonnull)resolver received:(NSString * _Nonnull)localizedWarning;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit18PresentationCursor")
@interface PresentationCursor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_PROTOCOL("_TtP7KiteKit33PresentationEventScriptingExports_")
@protocol PresentationEventScriptingExports <JSExport>
@property (nonatomic, readonly) enum EventType type;
@property (nonatomic, readonly) NSInteger clickCount;
@property (nonatomic, readonly) NSInteger buttonNumber;
@property (nonatomic, readonly) CGPoint locationInWindow;
@property (nonatomic, readonly) CGPoint locationInView;
@property (nonatomic, readonly) CGFloat deltaX;
@property (nonatomic, readonly) CGFloat deltaY;
@property (nonatomic, readonly) CGFloat scrollingDeltaX;
@property (nonatomic, readonly) CGFloat scrollingDeltaY;
@property (nonatomic, readonly, copy) NSString * _Nonnull characters;
@property (nonatomic, readonly) CGFloat magnification;
@property (nonatomic, readonly) float rotation;
- (CGPoint)locationInLayer:(JSValue * _Nullable)layer SWIFT_WARN_UNUSED_RESULT;
@end


@interface PresentationEvent (SWIFT_EXTENSION(KiteKit)) <PresentationEventScriptingExports>
- (CGPoint)locationInLayer:(JSValue * _Nullable)inLayer SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC7KiteKit19PresentationOptions")
@interface PresentationOptions : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit23PresentationPageManager")
@interface PresentationPageManager : NSObject
@property (nonatomic, readonly, strong) PageLayer * _Nonnull currentPage;
@property (nonatomic, readonly, strong) PageLayer * _Nonnull rootPage;
- (nonnull instancetype)initWith:(PageLayer * _Nonnull)rootPage OBJC_DESIGNATED_INITIALIZER;
- (void)changeCurrentPageTo:(PageLayer * _Nonnull)toPageLayer;
- (void)registerTransitionPage:(PageLayer * _Nonnull)transitionPage;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit32PresentationPanGestureRecognizer")
@interface PresentationPanGestureRecognizer : UIPanGestureRecognizer
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)reset;
- (nonnull instancetype)initWithTarget:(id _Nullable)target action:(SEL _Nullable)action OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit34PresentationPinchGestureRecognizer")
@interface PresentationPinchGestureRecognizer : UIPinchGestureRecognizer
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)reset;
- (nonnull instancetype)initWithTarget:(id _Nullable)target action:(SEL _Nullable)action OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit37PresentationRotationGestureRecognizer")
@interface PresentationRotationGestureRecognizer : UIRotationGestureRecognizer
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)reset;
- (nonnull instancetype)initWithTarget:(id _Nullable)target action:(SEL _Nullable)action OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit22PresentationScrollView")
@interface PresentationScrollView : UIScrollView
@property (nonatomic) CGPoint contentOffset;
@property (nonatomic) CGRect bounds;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewWillTransitionTo:(CGSize)size with:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7KiteKit34PresentationSwipeGestureRecognizer")
@interface PresentationSwipeGestureRecognizer : UISwipeGestureRecognizer
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)reset;
- (nonnull instancetype)initWithTarget:(id _Nullable)target action:(SEL _Nullable)action OBJC_DESIGNATED_INITIALIZER;
@end

@class NSTimer;

SWIFT_CLASS("_TtC7KiteKit31PresentationTimeIntervalManager")
@interface PresentationTimeIntervalManager : NSObject
- (nonnull instancetype)initWithPresentationContext:(PresentationContext * _Nonnull)presentationContext OBJC_DESIGNATED_INITIALIZER;
- (void)registerAction:(Action * _Nonnull)action forTimeInterval:(NSTimeInterval)timeInterval;
- (void)presentationPlaybackDidStart;
- (void)presentationPlaybackDidEnd;
- (void)timerFired:(NSTimer * _Nonnull)timer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit23PresentationTimingLayer")
@interface PresentationTimingLayer : CALayer
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSublayers;
- (void)layerTick:(NSTimer * _Nonnull)timer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7KiteKit28PresentationViewBackingLayer")
@interface PresentationViewBackingLayer : CALayer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSublayers;
@end


SWIFT_CLASS_NAMED("PressureChangedActionEvent")
@interface PressureChangedActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface PressureChangedActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface PressureChangedActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end




SWIFT_CLASS("_TtC7KiteKit23ResolvedCanvasPageCache")
@interface ResolvedCanvasPageCache : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, ResponseTriggerDecision, closed) {
  ResponseTriggerDecisionYes = 0,
  ResponseTriggerDecisionNo = 1,
  ResponseTriggerDecisionUndecided = 2,
};


SWIFT_CLASS_NAMED("ResumeTimelinePlaybackActionResponse")
@interface JRResumeTimelinePlaybackActionResponse : ActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit28RewindTimelineActionResponse")
@interface RewindTimelineActionResponse : ActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RewindVideoActionResponse")
@interface JRRewindVideoActionResponse : ActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RunJavaScriptActionResponse")
@interface RunJavaScriptActionResponse : ActionResponse
@property (nonatomic, copy) NSString * _Nonnull script;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface RunJavaScriptActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface RunJavaScriptActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_CLASS("_TtC7KiteKit15ScriptAssetInfo")
@interface ScriptAssetInfo : AssetInfo
@end


SWIFT_CLASS_NAMED("ScrollActionEvent")
@interface JRScrollActionEvent : UserInteractionActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRScrollActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface JRScrollActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS_NAMED("ScrollActionResponse")
@interface JRScrollActionResponse : BaseScrollActionResponse <UIScrollViewDelegate>
- (void)scrollLayerBoundsOriginChangedWithChangeDict:(NSDictionary * _Nonnull)changeDict;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end


@interface JRScrollActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface JRScrollActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end




SWIFT_CLASS("_TtC7KiteKit12SnapshotView")
@interface SnapshotView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7KiteKit5Sound")
@interface Sound : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7KiteKit14SoundAssetInfo")
@interface SoundAssetInfo : AssetInfo
@end





SWIFT_CLASS_NAMED("TimeIntervalActionEvent")
@interface JRTimeIntervalActionEvent : ActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRTimeIntervalActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface JRTimeIntervalActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS("_TtC7KiteKit34TimeIntervalFiredPresentationEvent")
@interface TimeIntervalFiredPresentationEvent : PresentationEvent
@end


SWIFT_PROTOCOL("_TtP7KiteKit21TimerScriptingExports_")
@protocol TimerScriptingExports <JSExport>
- (void)fire;
- (void)invalidate;
@property (nonatomic, readonly) BOOL isValid;
@property (nonatomic, readonly) id _Nullable userInfo;
@property (nonatomic, copy) NSDate * _Nonnull fireDate;
@property (nonatomic, readonly) NSTimeInterval timeInterval;
@property (nonatomic) NSTimeInterval tolerance;
@end


@interface NSTimer (SWIFT_EXTENSION(KiteKit)) <TimerScriptingExports>
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
@end


SWIFT_CLASS_NAMED("TimerFireActionEvent")
@interface JRTimerFireActionEvent : ActionEvent
- (nonnull instancetype)init;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface JRTimerFireActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


@interface JRTimerFireActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_CLASS("_TtC7KiteKit27TimerFiredPresentationEvent")
@interface TimerFiredPresentationEvent : PresentationEvent
@end




SWIFT_CLASS_NAMED("ToggleiOSKeyboardActionResponse")
@interface ToggleiOSKeyboardActionResponse : ActionResponse
@property (nonatomic) BOOL toggleOn;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface ToggleiOSKeyboardActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface ToggleiOSKeyboardActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS_NAMED("TransitionToLayerActionResponse")
@interface TransitionToLayerActionResponse : ActionResponse
@property (nonatomic, copy) NSString * _Nonnull fromLayerID;
@property (nonatomic, copy) NSString * _Nonnull toLayerID;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface TransitionToLayerActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)restoreItemIdentifiersFrom:(ItemCatalog * _Nonnull)catalog;
@end


@interface TransitionToLayerActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface TransitionToLayerActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS_NAMED("TransitionToPageActionResponse")
@interface TransitionToPageActionResponse : ActionResponse
@property (nonatomic, copy) NSString * _Nonnull canvasID;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@end


@interface TransitionToPageActionResponse (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface TransitionToPageActionResponse (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionResponse:(ActionResponse * _Nonnull)actionResponse copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end


SWIFT_CLASS_NAMED("TriggerActionEventActionResponse")
@interface JRTriggerActionEventActionResponse : ActionReferencingActionResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface UIBezierPath (SWIFT_EXTENSION(KiteKit)) <PlatfromBezierPathScirptingExports>
+ (UIBezierPath * _Nonnull)bezierPath:(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIBezierPath * _Nonnull)bezierPathWithRect:(CGRect)rect :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIBezierPath * _Nonnull)bezierPathWithOvalInRect:(CGRect)rect :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
- (void)appendBezierPath:(UIBezierPath * _Nonnull)bezierPath :(id _Nullable)ex;
+ (UIBezierPath * _Nonnull)bezierPathWithRoundedRect:(CGRect)rect :(CGFloat)xRadius :(CGFloat)yRadius SWIFT_WARN_UNUSED_RESULT;
- (void)lineToPoint:(CGPoint)point;
- (void)curveToPoint:(CGPoint)endPoint controlPoint1:(CGPoint)controlPoint1 controlPoint2:(CGPoint)controlPoint2;
@property (nonatomic, readonly) BOOL bezierPathEmpty;
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
@end






@interface UIColor (SWIFT_EXTENSION(KiteKit)) <PlatformColorScriptingExports>
+ (UIColor * _Nonnull)colorWithWhite:(CGFloat)white alpha:(CGFloat)alpha :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)colorWithCIColor:(CIColor * _Nonnull)ciColor :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorWithPatternImage:(UIImage * _Nonnull)image :(id _Nullable)ex SWIFT_WARN_UNUSED_RESULT;
+ (void)prepareForPresentationInContext:(JSContext * _Nonnull)context;
@end










@interface UIView (SWIFT_EXTENSION(KiteKit))
- (void)viewWillTransitionTo:(CGSize)size with:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
@end




SWIFT_CLASS("_TtC7KiteKit15UnarchivingInfo")
@interface UnarchivingInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@interface UserInteractionActionEvent (SWIFT_EXTENSION(KiteKit))
- (BOOL)setupWithArchive:(NSDictionary<NSString *, id> * _Nonnull)archive unarchivingInfo:(UnarchivingInfo * _Nonnull)unarchivingInfo error:(NSError * _Nullable * _Nullable)error;
@end


@interface UserInteractionActionEvent (SWIFT_EXTENSION(KiteKit))
- (void)setupAsCopyOfActionEvent:(ActionEvent * _Nonnull)actionEvent copyingInfo:(CopyingInfo * _Nonnull)copyingInfo;
@end





SWIFT_CLASS("_TtC7KiteKit14VideoAssetInfo")
@interface VideoAssetInfo : AssetInfo
@end


SWIFT_CLASS("_TtC7KiteKit14iOSSystemSound")
@interface iOSSystemSound : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
